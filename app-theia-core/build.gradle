apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    kapt "com.google.guava:guava:$kapt_guavaVersion"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
    kapt "com.android.databinding:compiler:$gradleToolsVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    kapt "android.arch.lifecycle:compiler:$androidarchVersion"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //compile 'org.videolan.libvlc:libvlc-x86:3.0.0-SNAPSHOT@aar'

    compile "android.arch.lifecycle:runtime:$androidarchVersion"
    compile "android.arch.lifecycle:extensions:$androidarchVersion"

    compile project(':common-glide')
    compile project(':common-dagger')
    compile project(':common-rx')
    compile project(':media')
    compile project(':media-playback')
    compile project(':libtvdb')
    compile project(':libtmdb')
    compile project(':upnp-cds-browser')
    compile project(':upnp-cds-featurelist')

    testCompile "junit:junit:$test_junitVersion"
    testCompile "org.robolectric:robolectric:$test_robolectricVersion"
    //testCompile 'com.squareup.okhttp:okhttp-testing-support:2.7.5'
    testCompile "com.squareup.okhttp3:mockwebserver:$test_mockwebserverVersion"
    testCompile "org.assertj:assertj-core:$test_assertJVersion"

}

configurations.all {
    // check for updates every build (to avoid this use offline mode)
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
